#  CRMO Web NodeJS build

image: node:10.15.3

pipelines:
  default:
    - step:
        name: Starting Build
        caches:
          - node
        script:
          - echo "Creating Angular Build environment"
          
    - step:
        name: Create Environment
        # deployment: production
        script:
          - cd /
          - npm install -g @angular/cli@10.2.0
        caches:
          - node
          
  branches:
    master:
      - parallel:
        - step:
            name: Build and Test
            script:
              - echo "Starting CRM Omni PROD Build"
              - npm run build:crmo-build-all
              - echo "Ng Build Complete"
              - cp .htaccess dist
              - echo "HTACCESS Copied"
            artifacts:
              - dist/**
        - step:
            name: Code linting
            script:
              - npm install eslint
              - npx eslint .
            caches:
              - node  
    
    phase1.0.dev:
      - step:
          name: Update Node Modules
          script:
            # - npm install
            - echo "hello"

      - step:
          name: Build and Test
          script:
            - npm install
            - echo "Starting CRM Omni Dev Build"
            - npm run build -prod ellaisys-lib
            - echo "EllaiSys Library Build Complete"
            - npm run build -prod crmo-lib
            - echo "CRMO Library Build Complete"
            - npm run build -prod --base-href=/$NG_BACKEND_BASE_HREF/ crmo-backend
            - echo "Ng Build Complete"
            - cp .htaccess.dev dist/.htaccess
            - echo "HTACCESS Copied"
          artifacts:
            - dist/**

      - step:
          name: Code linting
          script:
            - npm install eslint
            - npx eslint .
          caches:
            - node

      - step:
          name: Deploy to S3 Web
          image: atlassian/pipelines-awscli
          script:
            - cd dist/
            - aws s3 sync --delete . s3://$AWS_S3_BUCKET/$AWS_S3_TARGET_FOLDER/dev
            - echo "Uploaded to AWS S3 WEB"


